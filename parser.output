Terminals unused in grammar

    HEX_DEC_LITERAL


State 92 conflicts: 5 reduce/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variables body

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';'

    3 optional_parameters: parameters
    4                    | ε

    5 parameters: parameter following_parameters

    6 following_parameters: following_parameters ',' parameter
    7                     | ε

    8 parameter: IDENTIFIER ':' type

    9 type: INTEGER
   10     | REAL
   11     | CHARACTER

   12 optional_variables: optional_variables variable
   13                   | ε

   14 variable: IDENTIFIER ':' type IS statement ';'
   15         | IDENTIFIER ':' LIST OF type IS list ';'

   16 list: '(' expressions ')'

   17 expressions: expressions ',' expression
   18            | expression

   19 body: BEGIN_ statement_ END ';'

   20 statement_: statement ';'
   21           | error ';'

   22 statement: expression
   23          | WHEN or_choice ',' expression ':' expression
   24          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   25          | IF or_choice THEN statement ';' elsifs ELSE statement ';' ENDIF
   26          | FOLD direction operator list_choice ENDFOLD

   27 elsifs: elsifs ELSIF or_choice THEN statement ';'
   28       | ε

   29 direction: LEFT
   30          | RIGHT

   31 operator: ADDOP
   32         | MULOP

   33 list_choice: list
   34            | IDENTIFIER

   35 cases: cases case
   36      | ε

   37 case: CASE INT_LITERAL ARROW statement ';'

   38 or_choice: or_choice OROP and_condition
   39          | and_condition

   40 and_condition: and_condition ANDOP relation
   41              | relation

   42 relation: '(' or_choice ')'
   43         | expression RELOP expression
   44         | expression

   45 expression: expression ADDOP term
   46           | term

   47 term: term MULOP power
   48     | term REMOP power
   49     | power

   50 power: not_condition EXPOP power
   51      | not_condition

   52 not_condition: NOTOP primary
   53              | primary

   54 primary: '(' or_choice ')'
   55        | INT_LITERAL
   56        | CHAR_LITERAL
   57        | REAL_LITERAL
   58        | IDENTIFIER '(' expression ')'
   59        | IDENTIFIER
   60        | NEGOP primary


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 16 42 54 58
    ')' (41) 16 42 54 58
    ',' (44) 6 17 23
    ':' (58) 8 14 15 23
    ';' (59) 2 14 15 19 20 21 24 25 27 37
    error (256) 21
    IDENTIFIER (258) 2 8 14 15 34 58 59
    INT_LITERAL (259) 37 55
    CHAR_LITERAL (260) 56
    HEX_DEC_LITERAL (261)
    REAL_LITERAL (262) 57
    ADDOP (263) 31 45
    MULOP (264) 32 47
    ANDOP (265) 40
    RELOP (266) 43
    ARROW (267) 24 37
    OROP (268) 38
    NOTOP (269) 52
    REMOP (270) 48
    EXPOP (271) 50
    NEGOP (272) 60
    BEGIN_ (273) 19
    CASE (274) 37
    CHARACTER (275) 11
    ELSE (276) 25
    END (277) 19
    ENDSWITCH (278) 24
    FUNCTION (279) 2
    INTEGER (280) 9
    IS (281) 14 15 24
    LIST (282) 15
    OF (283) 15
    OTHERS (284) 24
    RETURNS (285) 2
    SWITCH (286) 24
    WHEN (287) 23
    ELSIF (288) 27
    ENDFOLD (289) 26
    ENDIF (290) 25
    FOLD (291) 26
    IF (292) 25
    LEFT (293) 29
    REAL (294) 10
    RIGHT (295) 30
    THEN (296) 25 27


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    function (48)
        on left: 1
        on right: 0
    function_header (49)
        on left: 2
        on right: 1
    optional_parameters (50)
        on left: 3 4
        on right: 2
    parameters (51)
        on left: 5
        on right: 3
    following_parameters (52)
        on left: 6 7
        on right: 5 6
    parameter (53)
        on left: 8
        on right: 5 6
    type (54)
        on left: 9 10 11
        on right: 2 8 14 15
    optional_variables (55)
        on left: 12 13
        on right: 1 12
    variable (56)
        on left: 14 15
        on right: 12
    list (57)
        on left: 16
        on right: 15 33
    expressions (58)
        on left: 17 18
        on right: 16 17
    body (59)
        on left: 19
        on right: 1
    statement_ (60)
        on left: 20 21
        on right: 19
    statement (61)
        on left: 22 23 24 25 26
        on right: 14 20 24 25 27 37
    elsifs (62)
        on left: 27 28
        on right: 25 27
    direction (63)
        on left: 29 30
        on right: 26
    operator (64)
        on left: 31 32
        on right: 26
    list_choice (65)
        on left: 33 34
        on right: 26
    cases (66)
        on left: 35 36
        on right: 24 35
    case (67)
        on left: 37
        on right: 35
    or_choice (68)
        on left: 38 39
        on right: 23 25 27 38 42 54
    and_condition (69)
        on left: 40 41
        on right: 38 39 40
    relation (70)
        on left: 42 43 44
        on right: 40 41
    expression (71)
        on left: 45 46
        on right: 17 18 22 23 24 43 44 45 58
    term (72)
        on left: 47 48 49
        on right: 45 46 47 48
    power (73)
        on left: 50 51
        on right: 47 48 49 50
    not_condition (74)
        on left: 52 53
        on right: 50 51
    primary (75)
        on left: 54 55 56 57 58 59 60
        on right: 52 53 60


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variables body

    $default  reduce using rule 13 (optional_variables)

    optional_variables  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER • optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 4 (optional_parameters)

    optional_parameters  go to state 8
    parameters           go to state 9
    parameter            go to state 10


State 5

    0 $accept: function $end •

    $default  accept


State 6

    1 function: function_header optional_variables • body
   12 optional_variables: optional_variables • variable

    IDENTIFIER  shift, and go to state 11
    BEGIN_      shift, and go to state 12

    variable  go to state 13
    body      go to state 14


State 7

    8 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 15


State 8

    2 function_header: FUNCTION IDENTIFIER optional_parameters • RETURNS type ';'

    RETURNS  shift, and go to state 16


State 9

    3 optional_parameters: parameters •

    $default  reduce using rule 3 (optional_parameters)


State 10

    5 parameters: parameter • following_parameters

    $default  reduce using rule 7 (following_parameters)

    following_parameters  go to state 17


State 11

   14 variable: IDENTIFIER • ':' type IS statement ';'
   15         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 18


State 12

   19 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement_     go to state 31
    statement      go to state 32
    expression     go to state 33
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 13

   12 optional_variables: optional_variables variable •

    $default  reduce using rule 12 (optional_variables)


State 14

    1 function: function_header optional_variables body •

    $default  reduce using rule 1 (function)


State 15

    8 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 38
    INTEGER    shift, and go to state 39
    REAL       shift, and go to state 40

    type  go to state 41


State 16

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS • type ';'

    CHARACTER  shift, and go to state 38
    INTEGER    shift, and go to state 39
    REAL       shift, and go to state 40

    type  go to state 42


State 17

    5 parameters: parameter following_parameters •
    6 following_parameters: following_parameters • ',' parameter

    ','  shift, and go to state 43

    $default  reduce using rule 5 (parameters)


State 18

   14 variable: IDENTIFIER ':' • type IS statement ';'
   15         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 38
    INTEGER    shift, and go to state 39
    LIST       shift, and go to state 44
    REAL       shift, and go to state 40

    type  go to state 45


State 19

   21 statement_: error • ';'

    ';'  shift, and go to state 46


State 20

   58 primary: IDENTIFIER • '(' expression ')'
   59        | IDENTIFIER •

    '('  shift, and go to state 47

    $default  reduce using rule 59 (primary)


State 21

   55 primary: INT_LITERAL •

    $default  reduce using rule 55 (primary)


State 22

   56 primary: CHAR_LITERAL •

    $default  reduce using rule 56 (primary)


State 23

   57 primary: REAL_LITERAL •

    $default  reduce using rule 57 (primary)


State 24

   52 not_condition: NOTOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    primary  go to state 48


State 25

   60 primary: NEGOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    primary  go to state 49


State 26

   24 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression     go to state 50
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 27

   23 statement: WHEN • or_choice ',' expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 51

    or_choice      go to state 52
    and_condition  go to state 53
    relation       go to state 54
    expression     go to state 55
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 28

   26 statement: FOLD • direction operator list_choice ENDFOLD

    LEFT   shift, and go to state 56
    RIGHT  shift, and go to state 57

    direction  go to state 58


State 29

   25 statement: IF • or_choice THEN statement ';' elsifs ELSE statement ';' ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 51

    or_choice      go to state 59
    and_condition  go to state 53
    relation       go to state 54
    expression     go to state 55
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 30

   54 primary: '(' • or_choice ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 51

    or_choice      go to state 60
    and_condition  go to state 53
    relation       go to state 54
    expression     go to state 55
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 31

   19 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 61


State 32

   20 statement_: statement • ';'

    ';'  shift, and go to state 62


State 33

   22 statement: expression •
   45 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63

    $default  reduce using rule 22 (statement)


State 34

   46 expression: term •
   47 term: term • MULOP power
   48     | term • REMOP power

    MULOP  shift, and go to state 64
    REMOP  shift, and go to state 65

    $default  reduce using rule 46 (expression)


State 35

   49 term: power •

    $default  reduce using rule 49 (term)


State 36

   50 power: not_condition • EXPOP power
   51      | not_condition •

    EXPOP  shift, and go to state 66

    $default  reduce using rule 51 (power)


State 37

   53 not_condition: primary •

    $default  reduce using rule 53 (not_condition)


State 38

   11 type: CHARACTER •

    $default  reduce using rule 11 (type)


State 39

    9 type: INTEGER •

    $default  reduce using rule 9 (type)


State 40

   10 type: REAL •

    $default  reduce using rule 10 (type)


State 41

    8 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 8 (parameter)


State 42

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type • ';'

    ';'  shift, and go to state 67


State 43

    6 following_parameters: following_parameters ',' • parameter

    IDENTIFIER  shift, and go to state 7

    parameter  go to state 68


State 44

   15 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 69


State 45

   14 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 70


State 46

   21 statement_: error ';' •

    $default  reduce using rule 21 (statement_)


State 47

   58 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression     go to state 71
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 48

   52 not_condition: NOTOP primary •

    $default  reduce using rule 52 (not_condition)


State 49

   60 primary: NEGOP primary •

    $default  reduce using rule 60 (primary)


State 50

   24 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   45 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63
    IS     shift, and go to state 72


State 51

   42 relation: '(' • or_choice ')'
   54 primary: '(' • or_choice ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 51

    or_choice      go to state 73
    and_condition  go to state 53
    relation       go to state 54
    expression     go to state 55
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 52

   23 statement: WHEN or_choice • ',' expression ':' expression
   38 or_choice: or_choice • OROP and_condition

    OROP  shift, and go to state 74
    ','   shift, and go to state 75


State 53

   39 or_choice: and_condition •
   40 and_condition: and_condition • ANDOP relation

    ANDOP  shift, and go to state 76

    $default  reduce using rule 39 (or_choice)


State 54

   41 and_condition: relation •

    $default  reduce using rule 41 (and_condition)


State 55

   43 relation: expression • RELOP expression
   44         | expression •
   45 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63
    RELOP  shift, and go to state 77

    $default  reduce using rule 44 (relation)


State 56

   29 direction: LEFT •

    $default  reduce using rule 29 (direction)


State 57

   30 direction: RIGHT •

    $default  reduce using rule 30 (direction)


State 58

   26 statement: FOLD direction • operator list_choice ENDFOLD

    ADDOP  shift, and go to state 78
    MULOP  shift, and go to state 79

    operator  go to state 80


State 59

   25 statement: IF or_choice • THEN statement ';' elsifs ELSE statement ';' ENDIF
   38 or_choice: or_choice • OROP and_condition

    OROP  shift, and go to state 74
    THEN  shift, and go to state 81


State 60

   38 or_choice: or_choice • OROP and_condition
   54 primary: '(' or_choice • ')'

    OROP  shift, and go to state 74
    ')'   shift, and go to state 82


State 61

   19 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 83


State 62

   20 statement_: statement ';' •

    $default  reduce using rule 20 (statement_)


State 63

   45 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    term           go to state 84
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 64

   47 term: term MULOP • power

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    power          go to state 85
    not_condition  go to state 36
    primary        go to state 37


State 65

   48 term: term REMOP • power

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    power          go to state 86
    not_condition  go to state 36
    primary        go to state 37


State 66

   50 power: not_condition EXPOP • power

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    power          go to state 87
    not_condition  go to state 36
    primary        go to state 37


State 67

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 68

    6 following_parameters: following_parameters ',' parameter •

    $default  reduce using rule 6 (following_parameters)


State 69

   15 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 38
    INTEGER    shift, and go to state 39
    REAL       shift, and go to state 40

    type  go to state 88


State 70

   14 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement      go to state 89
    expression     go to state 33
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 71

   45 expression: expression • ADDOP term
   58 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 63
    ')'    shift, and go to state 90


State 72

   24 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 36 (cases)

    cases  go to state 91


State 73

   38 or_choice: or_choice • OROP and_condition
   42 relation: '(' or_choice • ')'
   54 primary: '(' or_choice • ')'

    OROP  shift, and go to state 74
    ')'   shift, and go to state 92


State 74

   38 or_choice: or_choice OROP • and_condition

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 51

    and_condition  go to state 93
    relation       go to state 54
    expression     go to state 55
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 75

   23 statement: WHEN or_choice ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression     go to state 94
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 76

   40 and_condition: and_condition ANDOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 51

    relation       go to state 95
    expression     go to state 55
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 77

   43 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression     go to state 96
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 78

   31 operator: ADDOP •

    $default  reduce using rule 31 (operator)


State 79

   32 operator: MULOP •

    $default  reduce using rule 32 (operator)


State 80

   26 statement: FOLD direction operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 97
    '('         shift, and go to state 98

    list         go to state 99
    list_choice  go to state 100


State 81

   25 statement: IF or_choice THEN • statement ';' elsifs ELSE statement ';' ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement      go to state 101
    expression     go to state 33
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 82

   54 primary: '(' or_choice ')' •

    $default  reduce using rule 54 (primary)


State 83

   19 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 19 (body)


State 84

   45 expression: expression ADDOP term •
   47 term: term • MULOP power
   48     | term • REMOP power

    MULOP  shift, and go to state 64
    REMOP  shift, and go to state 65

    $default  reduce using rule 45 (expression)


State 85

   47 term: term MULOP power •

    $default  reduce using rule 47 (term)


State 86

   48 term: term REMOP power •

    $default  reduce using rule 48 (term)


State 87

   50 power: not_condition EXPOP power •

    $default  reduce using rule 50 (power)


State 88

   15 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 102


State 89

   14 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 103


State 90

   58 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 58 (primary)


State 91

   24 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   35 cases: cases • case

    CASE    shift, and go to state 104
    OTHERS  shift, and go to state 105

    case  go to state 106


State 92

   42 relation: '(' or_choice ')' •
   54 primary: '(' or_choice ')' •

    ADDOP     reduce using rule 54 (primary)
    MULOP     reduce using rule 54 (primary)
    ANDOP     reduce using rule 42 (relation)
    ANDOP     [reduce using rule 54 (primary)]
    RELOP     reduce using rule 54 (primary)
    OROP      reduce using rule 42 (relation)
    OROP      [reduce using rule 54 (primary)]
    REMOP     reduce using rule 54 (primary)
    EXPOP     reduce using rule 54 (primary)
    THEN      reduce using rule 42 (relation)
    THEN      [reduce using rule 54 (primary)]
    ','       reduce using rule 42 (relation)
    ','       [reduce using rule 54 (primary)]
    ')'       reduce using rule 42 (relation)
    ')'       [reduce using rule 54 (primary)]
    $default  reduce using rule 42 (relation)


State 93

   38 or_choice: or_choice OROP and_condition •
   40 and_condition: and_condition • ANDOP relation

    ANDOP  shift, and go to state 76

    $default  reduce using rule 38 (or_choice)


State 94

   23 statement: WHEN or_choice ',' expression • ':' expression
   45 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63
    ':'    shift, and go to state 107


State 95

   40 and_condition: and_condition ANDOP relation •

    $default  reduce using rule 40 (and_condition)


State 96

   43 relation: expression RELOP expression •
   45 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63

    $default  reduce using rule 43 (relation)


State 97

   34 list_choice: IDENTIFIER •

    $default  reduce using rule 34 (list_choice)


State 98

   16 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    expressions    go to state 108
    expression     go to state 109
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 99

   33 list_choice: list •

    $default  reduce using rule 33 (list_choice)


State 100

   26 statement: FOLD direction operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 110


State 101

   25 statement: IF or_choice THEN statement • ';' elsifs ELSE statement ';' ENDIF

    ';'  shift, and go to state 111


State 102

   15 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 98

    list  go to state 112


State 103

   14 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 14 (variable)


State 104

   37 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 113


State 105

   24 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 114


State 106

   35 cases: cases case •

    $default  reduce using rule 35 (cases)


State 107

   23 statement: WHEN or_choice ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression     go to state 115
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 108

   16 list: '(' expressions • ')'
   17 expressions: expressions • ',' expression

    ','  shift, and go to state 116
    ')'  shift, and go to state 117


State 109

   18 expressions: expression •
   45 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63

    $default  reduce using rule 18 (expressions)


State 110

   26 statement: FOLD direction operator list_choice ENDFOLD •

    $default  reduce using rule 26 (statement)


State 111

   25 statement: IF or_choice THEN statement ';' • elsifs ELSE statement ';' ENDIF

    $default  reduce using rule 28 (elsifs)

    elsifs  go to state 118


State 112

   15 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 119


State 113

   37 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 120


State 114

   24 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement      go to state 121
    expression     go to state 33
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 115

   23 statement: WHEN or_choice ',' expression ':' expression •
   45 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63

    $default  reduce using rule 23 (statement)


State 116

   17 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 30

    expression     go to state 122
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 117

   16 list: '(' expressions ')' •

    $default  reduce using rule 16 (list)


State 118

   25 statement: IF or_choice THEN statement ';' elsifs • ELSE statement ';' ENDIF
   27 elsifs: elsifs • ELSIF or_choice THEN statement ';'

    ELSE   shift, and go to state 123
    ELSIF  shift, and go to state 124


State 119

   15 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 15 (variable)


State 120

   37 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement      go to state 125
    expression     go to state 33
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 121

   24 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 126


State 122

   17 expressions: expressions ',' expression •
   45 expression: expression • ADDOP term

    ADDOP  shift, and go to state 63

    $default  reduce using rule 17 (expressions)


State 123

   25 statement: IF or_choice THEN statement ';' elsifs ELSE • statement ';' ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement      go to state 127
    expression     go to state 33
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 124

   27 elsifs: elsifs ELSIF • or_choice THEN statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    '('           shift, and go to state 51

    or_choice      go to state 128
    and_condition  go to state 53
    relation       go to state 54
    expression     go to state 55
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 125

   37 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 129


State 126

   24 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 130


State 127

   25 statement: IF or_choice THEN statement ';' elsifs ELSE statement • ';' ENDIF

    ';'  shift, and go to state 131


State 128

   27 elsifs: elsifs ELSIF or_choice • THEN statement ';'
   38 or_choice: or_choice • OROP and_condition

    OROP  shift, and go to state 74
    THEN  shift, and go to state 132


State 129

   37 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 37 (case)


State 130

   24 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 24 (statement)


State 131

   25 statement: IF or_choice THEN statement ';' elsifs ELSE statement ';' • ENDIF

    ENDIF  shift, and go to state 133


State 132

   27 elsifs: elsifs ELSIF or_choice THEN • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NOTOP         shift, and go to state 24
    NEGOP         shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    FOLD          shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement      go to state 134
    expression     go to state 33
    term           go to state 34
    power          go to state 35
    not_condition  go to state 36
    primary        go to state 37


State 133

   25 statement: IF or_choice THEN statement ';' elsifs ELSE statement ';' ENDIF •

    $default  reduce using rule 25 (statement)


State 134

   27 elsifs: elsifs ELSIF or_choice THEN statement • ';'

    ';'  shift, and go to state 135


State 135

   27 elsifs: elsifs ELSIF or_choice THEN statement ';' •

    $default  reduce using rule 27 (elsifs)
