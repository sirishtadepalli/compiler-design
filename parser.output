Terminals unused in grammar

    HEX_DEC_LITERAL
    OROP
    NOTOP


Grammar

    0 $accept: function $end

    1 function: function_header optional_variables body

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';'

    3 optional_parameters: parameters
    4                    | ε

    5 parameters: parameter following_parameters

    6 following_parameters: following_parameters ',' parameter
    7                     | ε

    8 parameter: IDENTIFIER ':' type

    9 type: INTEGER
   10     | REAL
   11     | CHARACTER

   12 optional_variables: optional_variables variable
   13                   | ε

   14 variable: IDENTIFIER ':' type IS statement ';'
   15         | IDENTIFIER ':' LIST OF type IS list ';'

   16 list: '(' expressions ')'

   17 expressions: expressions ',' expression
   18            | expression

   19 body: BEGIN_ statement_ END ';'

   20 statement_: statement ';'
   21           | error ';'

   22 statement: expression
   23          | WHEN condition ',' expression ':' expression
   24          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   25          | IF condition THEN statement ';' elsifs ELSE statement ';' ENDIF
   26          | FOLD direction operator list_choice ENDFOLD

   27 elsifs: elsifs ELSIF condition THEN statement ';'
   28       | ε

   29 direction: LEFT
   30          | RIGHT

   31 operator: ADDOP
   32         | MULOP

   33 list_choice: list
   34            | IDENTIFIER

   35 cases: cases case
   36      | ε

   37 case: CASE INT_LITERAL ARROW statement ';'

   38 condition: condition ANDOP relation
   39          | relation

   40 relation: '(' condition ')'
   41         | expression RELOP expression

   42 expression: expression ADDOP term
   43           | term

   44 term: term MULOP power
   45     | term REMOP power
   46     | power

   47 power: primary EXPOP power
   48      | primary

   49 primary: '(' expression ')'
   50        | INT_LITERAL
   51        | CHAR_LITERAL
   52        | REAL_LITERAL
   53        | IDENTIFIER '(' expression ')'
   54        | IDENTIFIER
   55        | NEGOP primary


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 16 40 49 53
    ')' (41) 16 40 49 53
    ',' (44) 6 17 23
    ':' (58) 8 14 15 23
    ';' (59) 2 14 15 19 20 21 24 25 27 37
    error (256) 21
    IDENTIFIER (258) 2 8 14 15 34 53 54
    INT_LITERAL (259) 37 50
    CHAR_LITERAL (260) 51
    HEX_DEC_LITERAL (261)
    REAL_LITERAL (262) 52
    ADDOP (263) 31 42
    MULOP (264) 32 44
    ANDOP (265) 38
    RELOP (266) 41
    ARROW (267) 24 37
    OROP (268)
    NOTOP (269)
    REMOP (270) 45
    EXPOP (271) 47
    NEGOP (272) 55
    BEGIN_ (273) 19
    CASE (274) 37
    CHARACTER (275) 11
    ELSE (276) 25
    END (277) 19
    ENDSWITCH (278) 24
    FUNCTION (279) 2
    INTEGER (280) 9
    IS (281) 14 15 24
    LIST (282) 15
    OF (283) 15
    OTHERS (284) 24
    RETURNS (285) 2
    SWITCH (286) 24
    WHEN (287) 23
    ELSIF (288) 27
    ENDFOLD (289) 26
    ENDIF (290) 25
    FOLD (291) 26
    IF (292) 25
    LEFT (293) 29
    REAL (294) 10
    RIGHT (295) 30
    THEN (296) 25 27


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    function (48)
        on left: 1
        on right: 0
    function_header (49)
        on left: 2
        on right: 1
    optional_parameters (50)
        on left: 3 4
        on right: 2
    parameters (51)
        on left: 5
        on right: 3
    following_parameters (52)
        on left: 6 7
        on right: 5 6
    parameter (53)
        on left: 8
        on right: 5 6
    type (54)
        on left: 9 10 11
        on right: 2 8 14 15
    optional_variables (55)
        on left: 12 13
        on right: 1 12
    variable (56)
        on left: 14 15
        on right: 12
    list (57)
        on left: 16
        on right: 15 33
    expressions (58)
        on left: 17 18
        on right: 16 17
    body (59)
        on left: 19
        on right: 1
    statement_ (60)
        on left: 20 21
        on right: 19
    statement (61)
        on left: 22 23 24 25 26
        on right: 14 20 24 25 27 37
    elsifs (62)
        on left: 27 28
        on right: 25 27
    direction (63)
        on left: 29 30
        on right: 26
    operator (64)
        on left: 31 32
        on right: 26
    list_choice (65)
        on left: 33 34
        on right: 26
    cases (66)
        on left: 35 36
        on right: 24 35
    case (67)
        on left: 37
        on right: 35
    condition (68)
        on left: 38 39
        on right: 23 25 27 38 40
    relation (69)
        on left: 40 41
        on right: 38 39
    expression (70)
        on left: 42 43
        on right: 17 18 22 23 24 41 42 49 53
    term (71)
        on left: 44 45 46
        on right: 42 43 44 45
    power (72)
        on left: 47 48
        on right: 44 45 46 47
    primary (73)
        on left: 49 50 51 52 53 54 55
        on right: 47 48 55


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variables body

    $default  reduce using rule 13 (optional_variables)

    optional_variables  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER • optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 4 (optional_parameters)

    optional_parameters  go to state 8
    parameters           go to state 9
    parameter            go to state 10


State 5

    0 $accept: function $end •

    $default  accept


State 6

    1 function: function_header optional_variables • body
   12 optional_variables: optional_variables • variable

    IDENTIFIER  shift, and go to state 11
    BEGIN_      shift, and go to state 12

    variable  go to state 13
    body      go to state 14


State 7

    8 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 15


State 8

    2 function_header: FUNCTION IDENTIFIER optional_parameters • RETURNS type ';'

    RETURNS  shift, and go to state 16


State 9

    3 optional_parameters: parameters •

    $default  reduce using rule 3 (optional_parameters)


State 10

    5 parameters: parameter • following_parameters

    $default  reduce using rule 7 (following_parameters)

    following_parameters  go to state 17


State 11

   14 variable: IDENTIFIER • ':' type IS statement ';'
   15         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 18


State 12

   19 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement_  go to state 30
    statement   go to state 31
    expression  go to state 32
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 13

   12 optional_variables: optional_variables variable •

    $default  reduce using rule 12 (optional_variables)


State 14

    1 function: function_header optional_variables body •

    $default  reduce using rule 1 (function)


State 15

    8 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 36
    INTEGER    shift, and go to state 37
    REAL       shift, and go to state 38

    type  go to state 39


State 16

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS • type ';'

    CHARACTER  shift, and go to state 36
    INTEGER    shift, and go to state 37
    REAL       shift, and go to state 38

    type  go to state 40


State 17

    5 parameters: parameter following_parameters •
    6 following_parameters: following_parameters • ',' parameter

    ','  shift, and go to state 41

    $default  reduce using rule 5 (parameters)


State 18

   14 variable: IDENTIFIER ':' • type IS statement ';'
   15         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 36
    INTEGER    shift, and go to state 37
    LIST       shift, and go to state 42
    REAL       shift, and go to state 38

    type  go to state 43


State 19

   21 statement_: error • ';'

    ';'  shift, and go to state 44


State 20

   53 primary: IDENTIFIER • '(' expression ')'
   54        | IDENTIFIER •

    '('  shift, and go to state 45

    $default  reduce using rule 54 (primary)


State 21

   50 primary: INT_LITERAL •

    $default  reduce using rule 50 (primary)


State 22

   51 primary: CHAR_LITERAL •

    $default  reduce using rule 51 (primary)


State 23

   52 primary: REAL_LITERAL •

    $default  reduce using rule 52 (primary)


State 24

   55 primary: NEGOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    primary  go to state 46


State 25

   24 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 47
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 26

   23 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 48

    condition   go to state 49
    relation    go to state 50
    expression  go to state 51
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 27

   26 statement: FOLD • direction operator list_choice ENDFOLD

    LEFT   shift, and go to state 52
    RIGHT  shift, and go to state 53

    direction  go to state 54


State 28

   25 statement: IF • condition THEN statement ';' elsifs ELSE statement ';' ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 48

    condition   go to state 55
    relation    go to state 50
    expression  go to state 51
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 29

   49 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 56
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 30

   19 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 57


State 31

   20 statement_: statement • ';'

    ';'  shift, and go to state 58


State 32

   22 statement: expression •
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 59

    $default  reduce using rule 22 (statement)


State 33

   43 expression: term •
   44 term: term • MULOP power
   45     | term • REMOP power

    MULOP  shift, and go to state 60
    REMOP  shift, and go to state 61

    $default  reduce using rule 43 (expression)


State 34

   46 term: power •

    $default  reduce using rule 46 (term)


State 35

   47 power: primary • EXPOP power
   48      | primary •

    EXPOP  shift, and go to state 62

    $default  reduce using rule 48 (power)


State 36

   11 type: CHARACTER •

    $default  reduce using rule 11 (type)


State 37

    9 type: INTEGER •

    $default  reduce using rule 9 (type)


State 38

   10 type: REAL •

    $default  reduce using rule 10 (type)


State 39

    8 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 8 (parameter)


State 40

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type • ';'

    ';'  shift, and go to state 63


State 41

    6 following_parameters: following_parameters ',' • parameter

    IDENTIFIER  shift, and go to state 7

    parameter  go to state 64


State 42

   15 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 65


State 43

   14 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 66


State 44

   21 statement_: error ';' •

    $default  reduce using rule 21 (statement_)


State 45

   53 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 67
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 46

   55 primary: NEGOP primary •

    $default  reduce using rule 55 (primary)


State 47

   24 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 59
    IS     shift, and go to state 68


State 48

   40 relation: '(' • condition ')'
   49 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 48

    condition   go to state 69
    relation    go to state 50
    expression  go to state 70
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 49

   23 statement: WHEN condition • ',' expression ':' expression
   38 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 71
    ','    shift, and go to state 72


State 50

   39 condition: relation •

    $default  reduce using rule 39 (condition)


State 51

   41 relation: expression • RELOP expression
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 59
    RELOP  shift, and go to state 73


State 52

   29 direction: LEFT •

    $default  reduce using rule 29 (direction)


State 53

   30 direction: RIGHT •

    $default  reduce using rule 30 (direction)


State 54

   26 statement: FOLD direction • operator list_choice ENDFOLD

    ADDOP  shift, and go to state 74
    MULOP  shift, and go to state 75

    operator  go to state 76


State 55

   25 statement: IF condition • THEN statement ';' elsifs ELSE statement ';' ENDIF
   38 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 71
    THEN   shift, and go to state 77


State 56

   42 expression: expression • ADDOP term
   49 primary: '(' expression • ')'

    ADDOP  shift, and go to state 59
    ')'    shift, and go to state 78


State 57

   19 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 79


State 58

   20 statement_: statement ';' •

    $default  reduce using rule 20 (statement_)


State 59

   42 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    term     go to state 80
    power    go to state 34
    primary  go to state 35


State 60

   44 term: term MULOP • power

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    power    go to state 81
    primary  go to state 35


State 61

   45 term: term REMOP • power

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    power    go to state 82
    primary  go to state 35


State 62

   47 power: primary EXPOP • power

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    power    go to state 83
    primary  go to state 35


State 63

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 64

    6 following_parameters: following_parameters ',' parameter •

    $default  reduce using rule 6 (following_parameters)


State 65

   15 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 36
    INTEGER    shift, and go to state 37
    REAL       shift, and go to state 38

    type  go to state 84


State 66

   14 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 85
    expression  go to state 32
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 67

   42 expression: expression • ADDOP term
   53 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 59
    ')'    shift, and go to state 86


State 68

   24 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 36 (cases)

    cases  go to state 87


State 69

   38 condition: condition • ANDOP relation
   40 relation: '(' condition • ')'

    ANDOP  shift, and go to state 71
    ')'    shift, and go to state 88


State 70

   41 relation: expression • RELOP expression
   42 expression: expression • ADDOP term
   49 primary: '(' expression • ')'

    ADDOP  shift, and go to state 59
    RELOP  shift, and go to state 73
    ')'    shift, and go to state 78


State 71

   38 condition: condition ANDOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 48

    relation    go to state 89
    expression  go to state 51
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 72

   23 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 90
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 73

   41 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 91
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 74

   31 operator: ADDOP •

    $default  reduce using rule 31 (operator)


State 75

   32 operator: MULOP •

    $default  reduce using rule 32 (operator)


State 76

   26 statement: FOLD direction operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 92
    '('         shift, and go to state 93

    list         go to state 94
    list_choice  go to state 95


State 77

   25 statement: IF condition THEN • statement ';' elsifs ELSE statement ';' ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 96
    expression  go to state 32
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 78

   49 primary: '(' expression ')' •

    $default  reduce using rule 49 (primary)


State 79

   19 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 19 (body)


State 80

   42 expression: expression ADDOP term •
   44 term: term • MULOP power
   45     | term • REMOP power

    MULOP  shift, and go to state 60
    REMOP  shift, and go to state 61

    $default  reduce using rule 42 (expression)


State 81

   44 term: term MULOP power •

    $default  reduce using rule 44 (term)


State 82

   45 term: term REMOP power •

    $default  reduce using rule 45 (term)


State 83

   47 power: primary EXPOP power •

    $default  reduce using rule 47 (power)


State 84

   15 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 97


State 85

   14 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 98


State 86

   53 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 53 (primary)


State 87

   24 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   35 cases: cases • case

    CASE    shift, and go to state 99
    OTHERS  shift, and go to state 100

    case  go to state 101


State 88

   40 relation: '(' condition ')' •

    $default  reduce using rule 40 (relation)


State 89

   38 condition: condition ANDOP relation •

    $default  reduce using rule 38 (condition)


State 90

   23 statement: WHEN condition ',' expression • ':' expression
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 59
    ':'    shift, and go to state 102


State 91

   41 relation: expression RELOP expression •
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 59

    $default  reduce using rule 41 (relation)


State 92

   34 list_choice: IDENTIFIER •

    $default  reduce using rule 34 (list_choice)


State 93

   16 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expressions  go to state 103
    expression   go to state 104
    term         go to state 33
    power        go to state 34
    primary      go to state 35


State 94

   33 list_choice: list •

    $default  reduce using rule 33 (list_choice)


State 95

   26 statement: FOLD direction operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 105


State 96

   25 statement: IF condition THEN statement • ';' elsifs ELSE statement ';' ENDIF

    ';'  shift, and go to state 106


State 97

   15 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 93

    list  go to state 107


State 98

   14 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 14 (variable)


State 99

   37 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 108


State 100

   24 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 109


State 101

   35 cases: cases case •

    $default  reduce using rule 35 (cases)


State 102

   23 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 110
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 103

   16 list: '(' expressions • ')'
   17 expressions: expressions • ',' expression

    ','  shift, and go to state 111
    ')'  shift, and go to state 112


State 104

   18 expressions: expression •
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 59

    $default  reduce using rule 18 (expressions)


State 105

   26 statement: FOLD direction operator list_choice ENDFOLD •

    $default  reduce using rule 26 (statement)


State 106

   25 statement: IF condition THEN statement ';' • elsifs ELSE statement ';' ENDIF

    $default  reduce using rule 28 (elsifs)

    elsifs  go to state 113


State 107

   15 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 114


State 108

   37 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 115


State 109

   24 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 116
    expression  go to state 32
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 110

   23 statement: WHEN condition ',' expression ':' expression •
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 59

    $default  reduce using rule 23 (statement)


State 111

   17 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 29

    expression  go to state 117
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 112

   16 list: '(' expressions ')' •

    $default  reduce using rule 16 (list)


State 113

   25 statement: IF condition THEN statement ';' elsifs • ELSE statement ';' ENDIF
   27 elsifs: elsifs • ELSIF condition THEN statement ';'

    ELSE   shift, and go to state 118
    ELSIF  shift, and go to state 119


State 114

   15 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 15 (variable)


State 115

   37 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 120
    expression  go to state 32
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 116

   24 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 121


State 117

   17 expressions: expressions ',' expression •
   42 expression: expression • ADDOP term

    ADDOP  shift, and go to state 59

    $default  reduce using rule 17 (expressions)


State 118

   25 statement: IF condition THEN statement ';' elsifs ELSE • statement ';' ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 122
    expression  go to state 32
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 119

   27 elsifs: elsifs ELSIF • condition THEN statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    '('           shift, and go to state 48

    condition   go to state 123
    relation    go to state 50
    expression  go to state 51
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 120

   37 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 124


State 121

   24 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 125


State 122

   25 statement: IF condition THEN statement ';' elsifs ELSE statement • ';' ENDIF

    ';'  shift, and go to state 126


State 123

   27 elsifs: elsifs ELSIF condition • THEN statement ';'
   38 condition: condition • ANDOP relation

    ANDOP  shift, and go to state 71
    THEN   shift, and go to state 127


State 124

   37 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 37 (case)


State 125

   24 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 24 (statement)


State 126

   25 statement: IF condition THEN statement ';' elsifs ELSE statement ';' • ENDIF

    ENDIF  shift, and go to state 128


State 127

   27 elsifs: elsifs ELSIF condition THEN • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    CHAR_LITERAL  shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    NEGOP         shift, and go to state 24
    SWITCH        shift, and go to state 25
    WHEN          shift, and go to state 26
    FOLD          shift, and go to state 27
    IF            shift, and go to state 28
    '('           shift, and go to state 29

    statement   go to state 129
    expression  go to state 32
    term        go to state 33
    power       go to state 34
    primary     go to state 35


State 128

   25 statement: IF condition THEN statement ';' elsifs ELSE statement ';' ENDIF •

    $default  reduce using rule 25 (statement)


State 129

   27 elsifs: elsifs ELSIF condition THEN statement • ';'

    ';'  shift, and go to state 130


State 130

   27 elsifs: elsifs ELSIF condition THEN statement ';' •

    $default  reduce using rule 27 (elsifs)
